给出集合 [1,2,3,...,n]，其所有元素共有 n! 种排列。

按大小顺序列出所有排列情况，并一一标记，当 n = 3 时, 所有排列如下：

"123"
"132"
"213"
"231"
"312"
"321"
给定 n 和 k，返回第 k 个排列。

示例 1：

输入：n = 3, k = 3
输出："213"
示例 2：

输入：n = 4, k = 9
输出："2314"
示例 3：

输入：n = 3, k = 1
输出："123"
提示：
1 <= n <= 9
1 <= k <= n!



class Solution {
public:
    string getPermutation(int n, int k) {
    vector<int> a(n);
    a[0] = 1;
    string ans;
    for (int i = 1; i < n; i++)
    {
        a[i] = i * a[i - 1];
    }
    int f = 0;
    vector<int> flag(n + 1);
    for (int i = 1; i < n + 1; i++)//标记数字是否被使用
    {
        flag[i] = 1;
    }
    k--;//标数从0开始
    for (int j = 1; j <= n; j++)
    {
        f = (k) / a[n - j] + 1;
        int l = 0;
        for (int m = 1; m <=n; m++)
        {
            if (flag[m])
            {
                l++;
                if (l == f)
                {
                    ans += (m + '0');
                    flag[m] = 0;
                    l = 0;
                    break;
                }
            }

        }
        k = (k)% a[n - j];
    }
    return ans;
    }
};
